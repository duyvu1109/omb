#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#
- name: Setup common OS packages
  hosts: client
  tags: server
  connection: ssh
  become: true
  roles:
  tasks:
    - name: Remove sysstat
      package:
        name:
          - sysstat
        state: absent
    - name: Install packages
      package:
        name:
          - xfsprogs
          - iotop
          - wget
          - sysstat
          - vim
          - chrony
          - git
          - gcc
          - tuned
        state: present
        update_cache: true
    - name: Install Java Redhat
      when: ansible_os_family == 'RedHat'
      package:
        name:
          - java-17
        state: present
    - name: Install Java on Debian
      when: ansible_os_family == 'Debian'
      package:
        name:
          - openjdk-17-jdk
        state: present

- name: Setup Benchmark client
  hosts: client
  connection: ssh
  become: true
  tasks:
    - file: path=/opt/benchmark state=absent
    - name: Copy benchmark code
      unarchive:
        src: ../../../../package/target/openmessaging-benchmark-0.0.1-SNAPSHOT-bin.tar.gz
        dest: /opt
    - shell: mv /opt/openmessaging-benchmark-0.0.1-SNAPSHOT /opt/benchmark
    - shell: tuned-adm profile latency-performance
    - shell: chown -R ubuntu /opt/benchmark

    - name: Get list of driver config files
      raw: ls -1 /opt/benchmark/driver-kafka/*.yaml
      register: drivers_list

    - name: Configure URL
      lineinfile:
        dest: "{{ item }}"
        regexp: "^  bootstrap.servers="
        line: "  bootstrap.servers={{ bootstrapServers }}"
      with_items: "{{ drivers_list.stdout_lines }}"

    - name: Configure SASL Mechanism
      lineinfile:
        dest: "{{ item }}"
        regexp: "^  sasl.mechanism="
        insertafter: "^  bootstrap.servers="
        line: "  sasl.mechanism=PLAIN"
      with_items: "{{ drivers_list.stdout_lines }}"

    - name: Configure Benchmark Name
      lineinfile:
        dest: "{{ item }}"
        regexp: "^name: Kafka"
        line: "name: Kafka+SASL+TLS"
      with_items: "{{ drivers_list.stdout_lines }}"

    - name: Configure Security Protocol
      lineinfile:
        dest: "{{ item }}"
        regexp: "^  security.protocol="
        insertafter: "^  bootstrap.servers="
        line: "  security.protocol=SASL_SSL"
      with_items: "{{ drivers_list.stdout_lines }}"

    - name: Configure JAAS
      lineinfile:
        dest: "{{ item }}"
        regexp: "^  sasl.jaas.config="
        insertafter: "^  bootstrap.servers="
        line: "  sasl.jaas.config=org.apache.kafka.common.security.plain.PlainLoginModule required username='{{api_key}}' password='{{api_secret}}';"
      with_items: "{{ drivers_list.stdout_lines }}"

    - name: Configure memory
      lineinfile:
        dest: /opt/benchmark/bin/benchmark-worker
        regexp: "^JVM_MEM="
        line: "JVM_MEM=\"-Xms{{ clientMinJvmHeap }} -Xmx{{ clientMinJvmHeap }} -XX:+UseG1GC -XX:MaxGCPauseMillis=10 -XX:+ParallelRefProcEnabled -XX:+UnlockExperimentalVMOptions -XX:+DoEscapeAnalysis -XX:ParallelGCThreads=32 -XX:ConcGCThreads=32 -XX:G1NewSizePercent=50 -XX:+DisableExplicitGC -XX:-ResizePLAB -XX:+PerfDisableSharedMem -XX:+AlwaysPreTouch -XX:-UseBiasedLocking\""

    - name: Configure memory
      lineinfile:
        dest: /opt/benchmark/bin/benchmark
        regexp: "^JVM_MEM="
        line: 'JVM_MEM="-Xmx1G"'

    - name: Configure benchmark worker
      template:
        src: "templates/workers.yaml"
        dest: "/opt/benchmark/workers.yaml"

    - name: Install benchmark systemd service
      template:
        src: "templates/benchmark-worker.service"
        dest: "/etc/systemd/system/benchmark-worker.service"

    - name: Restart benchmark worker
      service:
        state: restarted
        name: "benchmark-worker"

- name: Hosts addresses
  hosts: localhost
  become: false
  tasks:
    - debug:
        msg: "Benchmark clients {{ item }}"
      with_items: "{{ groups['client'] }}"